// @generated by protoc-gen-es v2.2.3 with parameter "json_types=true"
// @generated from file behave/actions/v1/actions.proto (package behave.actions.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { PrintArgument, PrintArgumentJson, PrintResult, PrintResultJson } from "../print/v1/print_pb";

/**
 * Describes the file behave/actions/v1/actions.proto.
 */
export declare const file_behave_actions_v1_actions: GenFile;

/**
 * @generated from message behave.actions.v1.SequenceArgument
 */
export declare type SequenceArgument = Message<"behave.actions.v1.SequenceArgument"> & {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid: string;

  /**
   * repeated google.protobuf.Any children = 2;
   *
   * @generated from field: repeated behave.actions.v1.ActionArgument children = 2;
   */
  children: ActionArgument[];
};

/**
 * @generated from message behave.actions.v1.SequenceArgument
 */
export declare type SequenceArgumentJson = {
  /**
   * @generated from field: string uuid = 1;
   */
  uuid?: string;

  /**
   * repeated google.protobuf.Any children = 2;
   *
   * @generated from field: repeated behave.actions.v1.ActionArgument children = 2;
   */
  children?: ActionArgumentJson[];
};

/**
 * Describes the message behave.actions.v1.SequenceArgument.
 * Use `create(SequenceArgumentSchema)` to create a new message.
 */
export declare const SequenceArgumentSchema: GenMessage<SequenceArgument, SequenceArgumentJson>;

/**
 * @generated from message behave.actions.v1.SequenceResult
 */
export declare type SequenceResult = Message<"behave.actions.v1.SequenceResult"> & {
  /**
   * repeated google.protobuf.Any children = 2;
   *
   * @generated from field: repeated behave.actions.v1.ActionResult children = 2;
   */
  children: ActionResult[];
};

/**
 * @generated from message behave.actions.v1.SequenceResult
 */
export declare type SequenceResultJson = {
  /**
   * repeated google.protobuf.Any children = 2;
   *
   * @generated from field: repeated behave.actions.v1.ActionResult children = 2;
   */
  children?: ActionResultJson[];
};

/**
 * Describes the message behave.actions.v1.SequenceResult.
 * Use `create(SequenceResultSchema)` to create a new message.
 */
export declare const SequenceResultSchema: GenMessage<SequenceResult, SequenceResultJson>;

/**
 * @generated from message behave.actions.v1.ActionArgument
 */
export declare type ActionArgument = Message<"behave.actions.v1.ActionArgument"> & {
  /**
   * @generated from oneof behave.actions.v1.ActionArgument.action
   */
  action: {
    /**
     * @generated from field: behave.actions.print.v1.PrintArgument print = 101;
     */
    value: PrintArgument;
    case: "print";
  } | {
    /**
     * behave.actions.sequence.v1.SequenceArgument sequence = 102;
     *
     * @generated from field: behave.actions.v1.SequenceArgument sequence = 102;
     */
    value: SequenceArgument;
    case: "sequence";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message behave.actions.v1.ActionArgument
 */
export declare type ActionArgumentJson = {
  /**
   * @generated from field: behave.actions.print.v1.PrintArgument print = 101;
   */
  print?: PrintArgumentJson;

  /**
   * behave.actions.sequence.v1.SequenceArgument sequence = 102;
   *
   * @generated from field: behave.actions.v1.SequenceArgument sequence = 102;
   */
  sequence?: SequenceArgumentJson;
};

/**
 * Describes the message behave.actions.v1.ActionArgument.
 * Use `create(ActionArgumentSchema)` to create a new message.
 */
export declare const ActionArgumentSchema: GenMessage<ActionArgument, ActionArgumentJson>;

/**
 * @generated from message behave.actions.v1.ActionResult
 */
export declare type ActionResult = Message<"behave.actions.v1.ActionResult"> & {
  /**
   * @generated from oneof behave.actions.v1.ActionResult.action
   */
  action: {
    /**
     * @generated from field: behave.actions.print.v1.PrintResult print = 1;
     */
    value: PrintResult;
    case: "print";
  } | {
    /**
     * behave.actions.sequence.v1.SequenceResult sequence = 2;
     *
     * @generated from field: behave.actions.v1.SequenceResult sequence = 2;
     */
    value: SequenceResult;
    case: "sequence";
  } | { case: undefined; value?: undefined };
};

/**
 * @generated from message behave.actions.v1.ActionResult
 */
export declare type ActionResultJson = {
  /**
   * @generated from field: behave.actions.print.v1.PrintResult print = 1;
   */
  print?: PrintResultJson;

  /**
   * behave.actions.sequence.v1.SequenceResult sequence = 2;
   *
   * @generated from field: behave.actions.v1.SequenceResult sequence = 2;
   */
  sequence?: SequenceResultJson;
};

/**
 * Describes the message behave.actions.v1.ActionResult.
 * Use `create(ActionResultSchema)` to create a new message.
 */
export declare const ActionResultSchema: GenMessage<ActionResult, ActionResultJson>;

