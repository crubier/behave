// @generated by protoc-gen-es v2.2.3 with parameter "json_types=true"
// @generated from file behave/server/v1/server.proto (package behave.server.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage, GenService } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { ActionArgument, ActionArgumentJson } from "../../actions/v1/actions_pb";
import type { Context, ContextJson } from "../../context/v1/context_pb";
import type { Estimate, EstimateJson } from "../../estimation/v1/estimation_pb";

/**
 * Describes the file behave/server/v1/server.proto.
 */
export declare const file_behave_server_v1_server: GenFile;

/**
 * @generated from message behave.server.v1.BeginRequest
 */
export declare type BeginRequest = Message<"behave.server.v1.BeginRequest"> & {
  /**
   * @generated from field: behave.actions.v1.ActionArgument action_argument = 1;
   */
  actionArgument?: ActionArgument;
};

/**
 * @generated from message behave.server.v1.BeginRequest
 */
export declare type BeginRequestJson = {
  /**
   * @generated from field: behave.actions.v1.ActionArgument action_argument = 1;
   */
  actionArgument?: ActionArgumentJson;
};

/**
 * Describes the message behave.server.v1.BeginRequest.
 * Use `create(BeginRequestSchema)` to create a new message.
 */
export declare const BeginRequestSchema: GenMessage<BeginRequest, BeginRequestJson>;

/**
 * @generated from message behave.server.v1.BeginResponse
 */
export declare type BeginResponse = Message<"behave.server.v1.BeginResponse"> & {
  /**
   * @generated from field: string run_uuid = 1;
   */
  runUuid: string;
};

/**
 * @generated from message behave.server.v1.BeginResponse
 */
export declare type BeginResponseJson = {
  /**
   * @generated from field: string run_uuid = 1;
   */
  runUuid?: string;
};

/**
 * Describes the message behave.server.v1.BeginResponse.
 * Use `create(BeginResponseSchema)` to create a new message.
 */
export declare const BeginResponseSchema: GenMessage<BeginResponse, BeginResponseJson>;

/**
 * @generated from message behave.server.v1.EndRequest
 */
export declare type EndRequest = Message<"behave.server.v1.EndRequest"> & {
  /**
   * @generated from field: string run_uuid = 1;
   */
  runUuid: string;
};

/**
 * @generated from message behave.server.v1.EndRequest
 */
export declare type EndRequestJson = {
  /**
   * @generated from field: string run_uuid = 1;
   */
  runUuid?: string;
};

/**
 * Describes the message behave.server.v1.EndRequest.
 * Use `create(EndRequestSchema)` to create a new message.
 */
export declare const EndRequestSchema: GenMessage<EndRequest, EndRequestJson>;

/**
 * @generated from message behave.server.v1.EndResponse
 */
export declare type EndResponse = Message<"behave.server.v1.EndResponse"> & {
};

/**
 * @generated from message behave.server.v1.EndResponse
 */
export declare type EndResponseJson = {
};

/**
 * Describes the message behave.server.v1.EndResponse.
 * Use `create(EndResponseSchema)` to create a new message.
 */
export declare const EndResponseSchema: GenMessage<EndResponse, EndResponseJson>;

/**
 * @generated from message behave.server.v1.PauseRequest
 */
export declare type PauseRequest = Message<"behave.server.v1.PauseRequest"> & {
  /**
   * @generated from field: string run_uuid = 1;
   */
  runUuid: string;
};

/**
 * @generated from message behave.server.v1.PauseRequest
 */
export declare type PauseRequestJson = {
  /**
   * @generated from field: string run_uuid = 1;
   */
  runUuid?: string;
};

/**
 * Describes the message behave.server.v1.PauseRequest.
 * Use `create(PauseRequestSchema)` to create a new message.
 */
export declare const PauseRequestSchema: GenMessage<PauseRequest, PauseRequestJson>;

/**
 * @generated from message behave.server.v1.PauseResponse
 */
export declare type PauseResponse = Message<"behave.server.v1.PauseResponse"> & {
};

/**
 * @generated from message behave.server.v1.PauseResponse
 */
export declare type PauseResponseJson = {
};

/**
 * Describes the message behave.server.v1.PauseResponse.
 * Use `create(PauseResponseSchema)` to create a new message.
 */
export declare const PauseResponseSchema: GenMessage<PauseResponse, PauseResponseJson>;

/**
 * @generated from message behave.server.v1.ResumeRequest
 */
export declare type ResumeRequest = Message<"behave.server.v1.ResumeRequest"> & {
  /**
   * @generated from field: string run_uuid = 1;
   */
  runUuid: string;
};

/**
 * @generated from message behave.server.v1.ResumeRequest
 */
export declare type ResumeRequestJson = {
  /**
   * @generated from field: string run_uuid = 1;
   */
  runUuid?: string;
};

/**
 * Describes the message behave.server.v1.ResumeRequest.
 * Use `create(ResumeRequestSchema)` to create a new message.
 */
export declare const ResumeRequestSchema: GenMessage<ResumeRequest, ResumeRequestJson>;

/**
 * @generated from message behave.server.v1.ResumeResponse
 */
export declare type ResumeResponse = Message<"behave.server.v1.ResumeResponse"> & {
};

/**
 * @generated from message behave.server.v1.ResumeResponse
 */
export declare type ResumeResponseJson = {
};

/**
 * Describes the message behave.server.v1.ResumeResponse.
 * Use `create(ResumeResponseSchema)` to create a new message.
 */
export declare const ResumeResponseSchema: GenMessage<ResumeResponse, ResumeResponseJson>;

/**
 * @generated from message behave.server.v1.EstimateRequest
 */
export declare type EstimateRequest = Message<"behave.server.v1.EstimateRequest"> & {
  /**
   * @generated from field: behave.actions.v1.ActionArgument action_argument = 1;
   */
  actionArgument?: ActionArgument;

  /**
   * @generated from field: behave.context.v1.Context context = 2;
   */
  context?: Context;
};

/**
 * @generated from message behave.server.v1.EstimateRequest
 */
export declare type EstimateRequestJson = {
  /**
   * @generated from field: behave.actions.v1.ActionArgument action_argument = 1;
   */
  actionArgument?: ActionArgumentJson;

  /**
   * @generated from field: behave.context.v1.Context context = 2;
   */
  context?: ContextJson;
};

/**
 * Describes the message behave.server.v1.EstimateRequest.
 * Use `create(EstimateRequestSchema)` to create a new message.
 */
export declare const EstimateRequestSchema: GenMessage<EstimateRequest, EstimateRequestJson>;

/**
 * @generated from message behave.server.v1.EstimateResponse
 */
export declare type EstimateResponse = Message<"behave.server.v1.EstimateResponse"> & {
  /**
   * @generated from field: behave.estimation.v1.Estimate estimate = 1;
   */
  estimate?: Estimate;
};

/**
 * @generated from message behave.server.v1.EstimateResponse
 */
export declare type EstimateResponseJson = {
  /**
   * @generated from field: behave.estimation.v1.Estimate estimate = 1;
   */
  estimate?: EstimateJson;
};

/**
 * Describes the message behave.server.v1.EstimateResponse.
 * Use `create(EstimateResponseSchema)` to create a new message.
 */
export declare const EstimateResponseSchema: GenMessage<EstimateResponse, EstimateResponseJson>;

/**
 * @generated from service behave.server.v1.BehaveExampleNextJsAgentService
 */
export declare const BehaveExampleNextJsAgentService: GenService<{
  /**
   * @generated from rpc behave.server.v1.BehaveExampleNextJsAgentService.Begin
   */
  begin: {
    methodKind: "unary";
    input: typeof BeginRequestSchema;
    output: typeof BeginResponseSchema;
  },
  /**
   * @generated from rpc behave.server.v1.BehaveExampleNextJsAgentService.End
   */
  end: {
    methodKind: "unary";
    input: typeof EndRequestSchema;
    output: typeof EndResponseSchema;
  },
  /**
   * @generated from rpc behave.server.v1.BehaveExampleNextJsAgentService.Pause
   */
  pause: {
    methodKind: "unary";
    input: typeof PauseRequestSchema;
    output: typeof PauseResponseSchema;
  },
  /**
   * @generated from rpc behave.server.v1.BehaveExampleNextJsAgentService.Resume
   */
  resume: {
    methodKind: "unary";
    input: typeof ResumeRequestSchema;
    output: typeof ResumeResponseSchema;
  },
  /**
   * @generated from rpc behave.server.v1.BehaveExampleNextJsAgentService.Estimate
   */
  estimate: {
    methodKind: "unary";
    input: typeof EstimateRequestSchema;
    output: typeof EstimateResponseSchema;
  },
}>;

