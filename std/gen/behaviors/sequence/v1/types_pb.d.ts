// @generated by protoc-gen-es v2.2.3 with parameter "json_types=true"
// @generated from file behaviors/sequence/v1/types.proto (package behaviors.sequence.v1, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import type { Message } from "@bufbuild/protobuf";
import type { Any, AnyJson } from "@bufbuild/protobuf/wkt";

/**
 * Describes the file behaviors/sequence/v1/types.proto.
 */
export declare const file_behaviors_sequence_v1_types: GenFile;

/**
 * @generated from message behaviors.sequence.v1.SequenceArgument
 */
export declare type SequenceArgument = Message<"behaviors.sequence.v1.SequenceArgument"> & {
  /**
   * @generated from field: repeated google.protobuf.Any children = 1;
   */
  children: Any[];
};

/**
 * @generated from message behaviors.sequence.v1.SequenceArgument
 */
export declare type SequenceArgumentJson = {
  /**
   * @generated from field: repeated google.protobuf.Any children = 1;
   */
  children?: AnyJson[];
};

/**
 * Describes the message behaviors.sequence.v1.SequenceArgument.
 * Use `create(SequenceArgumentSchema)` to create a new message.
 */
export declare const SequenceArgumentSchema: GenMessage<SequenceArgument, SequenceArgumentJson>;

/**
 * @generated from message behaviors.sequence.v1.SequenceResult
 */
export declare type SequenceResult = Message<"behaviors.sequence.v1.SequenceResult"> & {
  /**
   * @generated from field: repeated google.protobuf.Any children = 1;
   */
  children: Any[];
};

/**
 * @generated from message behaviors.sequence.v1.SequenceResult
 */
export declare type SequenceResultJson = {
  /**
   * @generated from field: repeated google.protobuf.Any children = 1;
   */
  children?: AnyJson[];
};

/**
 * Describes the message behaviors.sequence.v1.SequenceResult.
 * Use `create(SequenceResultSchema)` to create a new message.
 */
export declare const SequenceResultSchema: GenMessage<SequenceResult, SequenceResultJson>;

/**
 * @generated from message behaviors.sequence.v1.SequenceState
 */
export declare type SequenceState = Message<"behaviors.sequence.v1.SequenceState"> & {
};

/**
 * @generated from message behaviors.sequence.v1.SequenceState
 */
export declare type SequenceStateJson = {
};

/**
 * Describes the message behaviors.sequence.v1.SequenceState.
 * Use `create(SequenceStateSchema)` to create a new message.
 */
export declare const SequenceStateSchema: GenMessage<SequenceState, SequenceStateJson>;

/**
 * @generated from message behaviors.sequence.v1.SequenceInput
 */
export declare type SequenceInput = Message<"behaviors.sequence.v1.SequenceInput"> & {
};

/**
 * @generated from message behaviors.sequence.v1.SequenceInput
 */
export declare type SequenceInputJson = {
};

/**
 * Describes the message behaviors.sequence.v1.SequenceInput.
 * Use `create(SequenceInputSchema)` to create a new message.
 */
export declare const SequenceInputSchema: GenMessage<SequenceInput, SequenceInputJson>;

/**
 * @generated from message behaviors.sequence.v1.SequenceOutput
 */
export declare type SequenceOutput = Message<"behaviors.sequence.v1.SequenceOutput"> & {
};

/**
 * @generated from message behaviors.sequence.v1.SequenceOutput
 */
export declare type SequenceOutputJson = {
};

/**
 * Describes the message behaviors.sequence.v1.SequenceOutput.
 * Use `create(SequenceOutputSchema)` to create a new message.
 */
export declare const SequenceOutputSchema: GenMessage<SequenceOutput, SequenceOutputJson>;

